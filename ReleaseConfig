#
# __COPYRIGHT__
#
# Permission is hereby granted, free of charge, to any person obtaining
# a copy of this software and associated documentation files (the
# "Software"), to deal in the Software without restriction, including
# without limitation the rights to use, copy, modify, merge, publish,
# distribute, sublicense, and/or sell copies of the Software, and to
# permit persons to whom the Software is furnished to do so, subject to
# the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY
# KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE
# WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
# LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
# OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
# WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

__revision__ = "__FILE__ __REVISION__ __DATE__ __DEVELOPER__"

#
# After updating this file, run bin/update-release-info.py <MODE>.
#

# The version tuple that will be used for the release.  The fields are
# (major, minor, micro, type, patchlevel).  The release level is one of
# 'alpha', 'beta', 'candidate', or 'final'.  If the release type is not
# 'final', the patchlevel is set to the release date.  This value is
# mandatory and must be present in this file.
#version_tuple = (2, 2, 0, 'final', 0)
version_tuple = (3, 0, 4, 'alpha', 0)

# Python versions prior to unsupported_python_version cause a fatal error
# when that version is used.  Python versions prior to deprecate_python_version
# cause a warning to be issued (assuming it's not disabled).  These values are
# mandatory and must be present in the configuration file.
unsupported_python_version = (2, 6, 0)
deprecated_python_version = (2, 7, 0)

# If release_date is (yyyy, mm, dd, hh, mm, ss), that is used as the release
# date and time.  If release_date is (yyyy, mm, dd), it is used for the
# release date and the current time is used for the release timetime.  If
# release_date is not given, the current date and time are used.
#release_date = (2012, 12, 21)

# If month_year is not given, the release month and year are used.
#month_year = 'December 2012'

# If copyright years is not given, the release year is used as the end.
copyright_years = '2001 - 2019'

# Local Variables:
# tab-width:4
# indent-tabs-mode:nil
# End:
# vim: set expandtab tabstop=4 shiftwidth=4:
