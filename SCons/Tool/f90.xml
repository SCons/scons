<?xml version="1.0"?>
<!--
SPDX-FileCopyrightText: Copyright The SCons Foundation (https://scons.org)
SPDX-License-Identifier: MIT
SPDX-FileType: DOCUMENTATION

This file is processed by the bin/SConsDoc.py module.
-->

<!DOCTYPE sconsdoc [
<!ENTITY % scons SYSTEM '../../doc/scons.mod'>
%scons;
<!ENTITY % builders-mod SYSTEM '../../doc/generated/builders.mod'>
%builders-mod;
<!ENTITY % functions-mod SYSTEM '../../doc/generated/functions.mod'>
%functions-mod;
<!ENTITY % tools-mod SYSTEM '../../doc/generated/tools.mod'>
%tools-mod;
<!ENTITY % variables-mod SYSTEM '../../doc/generated/variables.mod'>
%variables-mod;
]>

<sconsdoc xmlns="http://www.scons.org/dbxsd/v1.0"
          xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xsi:schemaLocation="http://www.scons.org/dbxsd/v1.0 http://www.scons.org/dbxsd/v1.0/scons.xsd">

<tool name="f90">
<summary>
<para>
Set &consvars; for the Fortran 90 dialect.
A Fortran dialect lets you customize the
compilation environment for certain files,
as selected by the dialect's <literal>FILESUFFIXES</literal> variables.
By default, the Fortran 90 dialect behaves the same
as the Fortran 95, 03 and 08 dialects.
</para>
</summary>
<sets>
<item>F90</item>
<item>F90FLAGS</item>
<item>F90COM</item>
<item>F90PPCOM</item>
<item>SHF90</item>
<item>SHF90FLAGS</item>
<item>SHF90COM</item>
<item>SHF90PPCOM</item>
<item>_F90INCFLAGS</item>
</sets>
<uses>
<item>F90COMSTR</item>
<item>F90PPCOMSTR</item>
<item>SHF90COMSTR</item>
<item>SHF90PPCOMSTR</item>
<item>FORTRANCOMMONFLAGS</item>
</uses>
</tool>

<cvar name="F90">
<summary>
<para>
The compiler for the Fortran 90 dialect.
This dialect is selected when a source file has a suffix
specified in &cv-link-F90FILESUFFIXES; or
&cv-link-F90PPFILESUFFIXES;.
You only need to set &cv-F90; if you need to specify
a compiler different than the one auto-detected for this dialect.
</para>
</summary>
</cvar>

<cvar name="F90COM">
<summary>
<para>
The command line used to compile a Fortran 90 source file to an object file.
You only need to set &cv-F90COM; if you need to use a customized
command line for this dialect.
The default setting will be equivalent to
&cv-link-FORTRANCOM;,
but using the dialect-specific &consvars; for substitution.
</para>
</summary>
</cvar>

<cvar name="F90COMSTR">
<summary>
<para>
If set, the string displayed when a Fortran 90 source file
is compiled to an object file.
If not set, then the actual command line,
as generated from &cv-link-F90COM;, is displayed.
</para>
</summary>
</cvar>

<cvar name="F90FILESUFFIXES">
<summary>
<para>
The list of file extensions for which the Fortran 90 dialect will be used.
By default, this is <literal>['.f90']</literal>
</para>
</summary>
</cvar>

<cvar name="F90PPFILESUFFIXES">
<summary>
<para>
The list of file extensions for which the compilation + preprocessor pass for
the Fortran 90 dialect will be used. By default, this is empty.
</para>
</summary>
</cvar>

<cvar name="F90FLAGS">
<summary>
<para>
General user-specified options that are passed to the compiler
for the Fortran 90 dialect.
You only need to set &cv-link-F90FLAGS; if you need to define specific
user options for Fortran 90 dialect files.
You should normally set the &cv-link-FORTRANCOMMONFLAGS; variable,
which holds user-specified options passed to all Fortran builds.
</para>
<para><emphasis>Changed in version 4.4</emphasis>:
&cv-link-FORTRANCOMMONFLAGS; is included by default
when command lines for this dialect are expanded.
</para>
</summary>
</cvar>

<cvar name="_F90INCFLAGS">
<summary>
<para>
An automatically-generated &consvar;
containing the Fortran 90 compiler command-line options
for specifying directories to be searched for include files.
The value of &cv-link-_F90INCFLAGS; is created by
prepending &cv-link-INCPREFIX;
and appending &cv-link-INCSUFFIX;
to each directory in &cv-link-F90PATH;.
</para>
</summary>
</cvar>

<cvar name="F90PATH">
<summary>
<para>
The list of directories that the Fortran 90 compiler will search for include
files. The implicit dependency scanner will also search these
directories for include files.
Do not include compiler search path syntax
(such as the <option>-I</option> option),
as this will make the result not portable
between different systems,
and will cause the directory not to be searched by the
dependency scanner.
You only need to set &cv-link-F90PATH; if you need to define a specific
include path for Fortran 90 files.
You should normally set the &cv-link-FORTRANPATH; variable,
which specifies the include path
for the default Fortran compiler
for all Fortran versions.
</para>
<para>
Note:
directory names in &cv-link-F90PATH; are looked up relative to the SConscript
directory when they are used in a command. To force
&scons;
to look up a directory relative to the root of the source tree,
use a top-relative path (starts with <literal>#</literal>):
</para>

<example_commands>
env = Environment(F90PATH='#/include')
</example_commands>

<para>
The directory lookup can also be forced using the
&f-link-Dir; function:
</para>

<example_commands>
include = Dir('include')
env = Environment(F90PATH=include)
</example_commands>

<para>
The directory list will be added to command lines
through the automatically-generated
&cv-link-_F90INCFLAGS; &consvar;.
Any command lines you define that need
the &cv-F90PATH; directory list should
include &cv-link-_F90INCFLAGS;,
for example:
</para>

<example_commands>
env = Environment(F90COM="my_compiler $_F90INCFLAGS -c -o $TARGET $SOURCE")
</example_commands>
</summary>
</cvar>

<cvar name="F90PPCOM">
<summary>
<para>
The command line used to compile a Fortran 90 source file to an object file,
including options such as &cv-link-F90FLAGS; and &cv-link-CPPFLAGS;
needed for the preprocessor.
You only need to set &cv-F90PPCOM; if you need to use a customized
command line for this dialect.
The default setting will be equivalent to
&cv-link-FORTRANPPCOM;,
but using the dialect-specific &consvars; for substitution.
</para>
</summary>
</cvar>

<cvar name="F90PPCOMSTR">
<summary>
<para>
If set, the string displayed when a Fortran 90 source file
is compiled to an object file, including preprocessing.
If not set, then the actual command line,
as generated from &cv-link-F90PPCOM;, is displayed.
</para>
</summary>
</cvar>

<cvar name="SHF90">
<summary>
<para>
The compiler for the Fortran 90 dialect for generating shared-library objects.
This dialect is selected when a source file has a suffix
specified in &cv-link-F90FILESUFFIXES; or
&cv-link-F90PPFILESUFFIXES; and compiling shared objects.
You only need to set &cv-SHF90; if you need to specify
a compiler different than the one auto-detected for this dialect.
</para>
</summary>
</cvar>

<cvar name="SHF90COM">
<summary>
<para>
The command line used to compile a Fortran 90 source file to a
shared object file.
You only need to set &cv-SHF90COM; if you need to use a customized
command line for this dialect.
The default setting will be equivalent to
&cv-link-SHFORTRANCOM;,
but using the dialect-specific &consvars; for substitution.
</para>
</summary>
</cvar>

<cvar name="SHF90COMSTR">
<summary>
<para>
If set, the string displayed when a Fortran 90 source file
is compiled to a shared object file.
If not set, then the actual command line,
as generated from &cv-link-SHF90COM;, is displayed.
</para>
</summary>
</cvar>

<cvar name="SHF90FLAGS">
<summary>
<para>
Options that are passed to the Fortran 90 compiler
when compiling shared-library objects.
You only need to set &cv-link-SHF90FLAGS; if you need to define specific
user options for Fortran 90 files.
You should normally set the &cv-link-FORTRANCOMMONFLAGS; variable,
which holds user-specified options passed to all Fortran builds.
</para>
<para><emphasis>Changed in version 4.4</emphasis>:
&cv-link-FORTRANCOMMONFLAGS; is included by default
when command lines for this dialect are expanded.
</para>
</summary>
</cvar>

<cvar name="SHF90PPCOM">
<summary>
<para>
The command line used to compile a Fortran 90 source file to a
shared object file,
including options such as &cv-link-SHF90FLAGS; and &cv-link-CPPFLAGS;
needed for the preprocessor.
You only need to set &cv-SHF90PPCOM; if you need to use a customized
command line for this dialect.
The default setting will be equivalent to
&cv-link-SHFORTRANPPCOM;,
but using the dialect-specific &consvars; for substitution.
</para>
</summary>
</cvar>

<cvar name="SHF90PPCOMSTR">
<summary>
<para>
If set, the string displayed when a Fortran 90 source file
is compiled to a shared-library object file, including preprocessing.
If not set, then the actual command line,
as generated from &cv-link-SHF90PPCOM;, is displayed.
</para>
</summary>
</cvar>

</sconsdoc>
