RELEASE 4.3.0 - Tue, 16 Nov 2021 18:12:46 -0700

  From Jacob Cassagnol:
    - Default hash algorithm check updated for SCons FIPS compliance. Now checks for hash viability
      first and then walks the tree to use the first viable hash as the default one. This typically
      selects SHA1 on FIPS-enabled systems less than Python 3.9 as the new default instead of MD5,
      unless SHA1 has also been disabled by security policy, at which point SCons selects SHA256
      as the default. For systems running Python 3.9 and later, the hashlib bug has been fixed,
      and SCons will once again default to MD5 as the preferred algorithm.

  From Joseph Brill:
    - Fix MSVS tests (vs-N.N-exec.py) for MSVS 6.0, 7.0, and 7.1 (import missing module).
    - Add support for Visual Studio 2022.

  From William Deegan:
    - Fix reproducible builds. Restore logic respecting SOURCE_DATE_EPOCH when set.
    - Fix version tests to work with updated scons --version output. (Date format changed)
    - Fix issue #4021.  Change the way subst() is used in Textfile() to not evaluate '$$(' -> '$',
      but instead it should yield '$('.
    - Change SCons.Platform.win32.get_architecture() to return platform.platform() when run in an
      environment where neither: PROCESSOR_ARCHITEW6432 nor PROCESSOR_ARCHITECTURE is set.
      This should fix platform tests which started failing when HOST_OS/HOST_ARCH changes
      introduced by Aaron Franke (listed below) were merged.
    - Further PCH updates. It's now recommended that env['PCH'] should always be a File node.
      Either via return value from env.PCH() or by explicitly using File('StdAfx.pch').
    - Added --no-ignore-skips to runtest.py. Changed default to ignore skips when setting
      runtest.py's exit status. Previously would exit 2 if any tests were skipped.
      Now will only exit 2 if user specifies --no-ignore-skips and some tests were skipped.

  From Ryan Egesdahl:
    - Small fix to ensure CLVar default value is an empty list.
      See MongoDB bug report: https://jira.mongodb.org/browse/SERVER-59656
      Code contributed by MongoDB.
    - Ninja - Fixed an issue where if you control-c and/or killed ninja while it was running scons to
      regenerate build.ninja you would end up with no build.ninja file and have to rerun scons from scratch.
      Code contributed by MongoDB.

  From Aaron Franke:
    - Define HOST_OS and HOST_ARCH in the environment for all platforms.
      Before this change, these were only defined for Win32 and OS/2.

  From Daniel Moody:
    - Fix ninja tool to never use for_sig substitution because ninja does not use signatures. This
      issue affected CommandGeneratorAction function actions specifically.
    - Expanded ninja Mkdir to also support Mkdir actions.
    - Added support for the PCH environment variable to support subst generators.
    - Fix command line escaping for ninja dollar sign escape. Without escaping ninja properly,
      the ninja file scons regenerate and callback invocations will lose the $ characters used in
      the scons command line which ninja uses itself for escaping. For Example:
          scons BUILD=xyz OTHERVAR=$BUILD
      Prior to this fix, it would cause ninja to fail to escape the dollar sign, leading to the
      single dollar sign being used as a ninja escape character in the ninja file.

  From Daniel Moody:
    - Added ninja API 'NINJA_FORCE_SCONS_BUILD' to force a node to callback to scons.

  From Mats Wichmann:
    - Two small Python 3.10 fixes: one more docstring turned into raw
      because it contained an escape; updated "helpful" syntax error message
      from 3.10 was not expected by SubstTests.py and test/Subst/Syntax.py
    - EmitterProxy rich comparison set is completed (checker warning).
      Added __le__, __gt__, __ge__.
    - Fix gcc/g++ tool failing if "gcc --version" returns text which fails
      to_String conversion (i.e., not UTF-8) - failure happens when tool
      initialization checks version. For gcc, the initial version string is
      not translated, for the rest, don't convert, just consume raw and discard.
    - Maintenance and doc: modernize some usage in Scanner package,
      calling super(), switching some imitialization to comprehensions,
      and code formatting.  Docstring for scanner Base moved from
      init-method to class-level so it's picked up by Sphinx.
      Added new sconsign filenames to skip_entry_list in Scanner/Dir.py
    - Change SCons.Scanner.Base to ScannerBase. Old name kept as an alias
      but is now unused in SCons itself.
    - Call Variables option converter consistently - the converter should
      have access to the env if it needs to (issue #2064).
    - Fixed the variables Add() method to accept a tuple for the variable
      name the same way AddVariables() does (issue #3869).
    - The premade validator PathIsDirCreate for for PathVariable now catches
      the case where the directory could not be created due to permission
      problems, allowing a more helpful error to be emitted (issue #2828)
    - Maintenance: Python thread.setDaemon is deprecated in favor of
      directly updating daemon attribute - update SCons to do this.
    - Make sure when subst'ing a callable, the callable is called with
      the correct for_signature value, previously it would be true even
      if doing SUBST_RAW (issue #4037)
    - Update Util/NodeList implementation to get rid of a workaround for
      early Python 3 slicing issue that is no longer a problem.
    - Rework some Java tests to skip rather than fail on CI systems, where
      the working java is > v9, but a 1.8 or 9 was also found.
    - Java updates: on Windows, detect more default JDK install locations.
      On all platforms, more Java versions (up to 17.0 now).  Add more information
      on version selection to docs.
      Update docs on JavaH tool in light of javah command dropped since 10.0.
      Try to be better about preserving user's passed-in JAVA* construction vars.
    - Start the deprecation of the qt tool, which refers to Qt3 (usupported
      since around 2006). There's a deprecation warning added, initially
      defaulting to disabled.

  From Brian Quistorff:
    - Fix crash when scons is run from a python environement where a signal
      is set from outside Python.
